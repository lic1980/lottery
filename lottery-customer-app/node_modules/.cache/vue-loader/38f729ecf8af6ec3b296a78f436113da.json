{"remainingRequest":"C:\\workspace\\lottery\\lottery-customer-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace\\lottery\\lottery-customer-app\\src\\components\\Lottery.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\workspace\\lottery\\lottery-customer-app\\src\\components\\Lottery.vue","mtime":1604386929759},{"path":"C:\\workspace\\lottery\\lottery-customer-app\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\lottery\\lottery-customer-app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\workspace\\lottery\\lottery-customer-app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\workspace\\lottery\\lottery-customer-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\lottery\\lottery-customer-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2VsZWN0ewogICAgYmFja2dyb3VuZC1jb2xvcjogcmVkICFpbXBvcnRhbnQ7CiAgICBjb2xvcjp3aGl0ZSAhaW1wb3J0YW50Owp9Ci5zZWxlY3Q6aG92ZXJ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQgIWltcG9ydGFudDsKICAgIGNvbG9yOndoaXRlICFpbXBvcnRhbnQ7Cn0KLnNlbGVjdDpmb2N1c3sKICAgIGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50OwogICAgY29sb3I6d2hpdGUgIWltcG9ydGFudDsKfQoudW5zZWxlY3R7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50OwogICAgYm9yZGVyLWNvbG9yOiAjRENERkU2ICFpbXBvcnRhbnQ7Cn0KLnVuc2VsZWN0OmhvdmVyewogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDsKICAgIGJvcmRlci1jb2xvcjogI0RDREZFNiAhaW1wb3J0YW50OwogICAgY29sb3I6YmxhY2sgIWltcG9ydGFudDsKfQoudW5zZWxlY3Q6Zm9jdXN7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50OwogICAgYm9yZGVyLWNvbG9yOiAjRENERkU2ICFpbXBvcnRhbnQ7CiAgICBjb2xvcjpibGFjayAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["Lottery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Lottery.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div>\n            <div>账户余额：{{ customer.deposit }}</div>\n        </div>\n        <div>\n            <div style=\"line-height: 36px;\">\n                <div >\n                    彩票名称：{{ lotteryRound.lottery.name }}\n                </div>\n                <div>\n                    开奖日期：{{ lotteryRound.openingTime }}\n                </div>\n                <div style=\"overflow:hidden\" v-for=\"(optionsItemId, itemIndex) in optionsByItemId.entries()\" v-bind:key=\"itemIndex\">\n                    <div></div>\n                    <div style=\"float:left;\">\n                        {{ itemByItemId.get(optionsItemId[0]).name }}：\n                    </div>\n                    <div style=\"float:left;margin:2px;\" v-for=\"(option, optionIndex) of optionsItemId[1]\" v-bind:key=\"optionIndex\">\n                        <el-button v-on:click=\"selectOption(option)\" v-bind:class=\"optionsSelected.includes(option)?'select': 'unselect' \" size=\"small\" circle>\n                            <div style=\"width: 16px;\">\n                            {{ option.text }}\n                            </div>\n                        </el-button>\n                    </div>\n                </div>\n                <div style=\"overflow:hidden\">\n                    <div style=\"float:left;\">\n                            投注倍数：\n                    </div>\n                    <div  style=\"float:left;\">\n                        <el-input maxlength=\"5\" v-model=\"times\" placeholder=\"倍数\" size=\"small\" min=\"1\"></el-input>\n                    </div>\n                </div>\n                <div style=\"overflow:hidden\">\n                    <div style=\"float:left;\">\n                            单注费用：\n                    </div>\n                    <div style=\"float:left;\">\n                            {{ fee }}\n                    </div>\n                </div>\n                <div>\n                    <div>\n                        <el-button v-on:click=\"submit()\" size=\"small\" v-bind:disabled=\"fee == 0\">\n                            确定\n                        </el-button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n    data () {\n        return {\n            fee: 0,\n            current: null,\n            times: 1,\n            customer: { \"id\": \"\", \"deposit\": 0 },\n            lotteryRound: {\"lottery\": {\"name\":\"\"}},\n            optionsByItemId: new Map(),\n            itemByItemId: new Map(),\n            optionsSelected: []\n        }\n    },\n    methods: {\n        selectOption: function (optionSelected) {\n            let optionsSelectedTemp = [...this.optionsSelected]\n            var position = optionsSelectedTemp.indexOf(optionSelected);\n            if (position < 0) {\n                optionsSelectedTemp.push(optionSelected);\n            } else {\n                optionsSelectedTemp.splice(position, 1);\n            }\n            // count options selected by item\n            var optionSelectedNumByItemId = new Map();\n            for (var i = 0; i < optionsSelectedTemp.length; i++) {\n                var option = optionsSelectedTemp[i];\n                var itemId = option.item.id;\n                if ( optionSelectedNumByItemId.has(itemId)) {\n                    optionSelectedNumByItemId.set(itemId, optionSelectedNumByItemId.get(itemId) + 1);\n                } else {\n                    optionSelectedNumByItemId.set(itemId, 1 );\n                }\n            }\n\n            console.log(\"###1 \" + optionSelectedNumByItemId.size)\n            console.log(\"###2 \" + JSON.stringify(this.lotteryRound.lottery))\n            // count fee\n            if (optionSelectedNumByItemId.size >= this.lotteryRound.lottery.minItemNum)  {\n                let baseFee = this.lotteryRound.lottery.baseFee;\n                let totalFee = 1;\n                \n                for  (let [itemId, num] of optionSelectedNumByItemId) {\n                    let item = this.itemByItemId.get(itemId);\n                    let minOptionNum = item.minOptionNum;\n                    let optionSelectedNum = num;\n                    if (optionSelectedNum < minOptionNum) {\n                        totalFee = 0;\n                    } else {\n                        // count combination, like C(7,6)\n                        totalFee = totalFee * (this.factorial(optionSelectedNum, (optionSelectedNum - minOptionNum + 1))/this.factorial(minOptionNum,1));\n                    }\n                } \n                this.fee = totalFee * baseFee;\n            } else {\n                 this.fee = 0;\n            }\n            this.optionsSelected = optionsSelectedTemp;\n        },\n        factorial: function(max, min) {\n            if (min > max) {\n                return 0;\n            }\n            let result = max;\n            for (let i = min; i< max; i++){\n                result = i * result;\n            }\n            return result;\n        },\n        submit: function() {\n            let cusId = sessionStorage.getItem(global.CUSTOMER_ID_KEY);\n            let totalFee = this.fee * this.times;\n            if (totalFee > this.customer.deposit) {\n                this.$message(\"余额不足\");\n                return;\n            }\n            if (totalFee > global.FEE_MAX) {\n                this.$message(\"超过最大投注额\");\n                return;\n            }\n            let data = {\n                \"customer\": {\"id\": cusId},\n                \"lotteryRound\": {\"id\": this.lotteryRound.id},\n                \"times\": this.times,\n                \"options\": this.optionsSelected\n            };\n            axios\n                .post('http://localhost:8080/api/v1/customers/' + cusId +'/bids', data, {headers: {'Content-Type': 'application/json'}})\n                .then(\n                    response => {\n                        this.$message(\"投注成功\");\n                        this.customer.deposit = this.customer.deposit - response.data.fee;\n                    }\n                )\n                .catch(function (error) { \n                    console.log(error);\n                });\n        }\n    },\n    mounted () {\n        let cusId = sessionStorage.getItem(global.CUSTOMER_ID_KEY);\n        let lotteryId = this.$route.query.lotteryId;\n        axios\n            .get('http://localhost:8080/api/v1/customers/' + cusId)\n            .then(response => (this.customer = response.data))\n            .catch(function (error) { \n                console.log(error);\n            });\n        axios\n            .get('http://localhost:8080/api/v1/lotteries/' + lotteryId + '/rounds?status=active')\n            .then(response => {\n                    if (response.data.content.length > 0) {\n                        this.lotteryRound = response.data.content[0];\n                    }\n                })\n            .catch(function (error) { \n                console.log(error);\n            });\n        axios\n            .get('http://localhost:8080/api/v1/lotteries/' + lotteryId + '/options')\n            .then(response => {\n                    var options = response.data;\n                    var optionsByitem = [];\n                    var optionsByItemId = new Map();\n                    for (var i = 0; i < options.length; i ++) {\n                        var option = options[i];\n                        var item = option.item;\n                        if (optionsByItemId.has(item.id)) {\n                            optionsByItemId.get(item.id).push(option);\n                        } else {\n                            optionsByitem = [];\n                            optionsByitem.push(option);\n                            optionsByItemId.set(item.id, optionsByitem);\n\n                            this.itemByItemId.set(item.id, item);\n                        }\n                    }\n                    this.optionsByItemId = optionsByItemId;\n                })\n            .catch(function (error) { \n                console.log(error);\n            });\n    }\n}\n</script>\n\n<style>\n.select{\n    background-color: red !important;\n    color:white !important;\n}\n.select:hover{\n    background-color: red !important;\n    color:white !important;\n}\n.select:focus{\n    background-color: red !important;\n    color:white !important;\n}\n.unselect{\n    background-color: white !important;\n    border-color: #DCDFE6 !important;\n}\n.unselect:hover{\n    background-color: white !important;\n    border-color: #DCDFE6 !important;\n    color:black !important;\n}\n.unselect:focus{\n    background-color: white !important;\n    border-color: #DCDFE6 !important;\n    color:black !important;\n}\n</style>"]}]}